{{ header }}{{ column_left }}
<div id="content">
  <div class="page-header">
    <div class="container-fluid">
      <div class="float-end">
        <button type="button" id="btn-compose" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modal-compose">
          <i class="fas fa-plus"></i> {{ button_compose }}
        </button>
        <button type="button" id="btn-mark-all-read" class="btn btn-success">
          <i class="fas fa-check-double"></i> {{ button_mark_all_read }}
        </button>
        <button type="button" id="btn-preferences" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#modal-preferences">
          <i class="fas fa-cog"></i> {{ button_preferences }}
        </button>
      </div>
      <h1>{{ heading_title }}</h1>
      <ol class="breadcrumb">
        {% for breadcrumb in breadcrumbs %}
          <li class="breadcrumb-item"><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
        {% endfor %}
      </ol>
    </div>
  </div>
  <div class="container-fluid">
    <!-- Statistics Cards -->
    <div class="row mb-4">
      <div class="col-lg-3 col-md-6">
        <div class="card bg-primary text-white">
          <div class="card-body">
            <div class="d-flex justify-content-between">
              <div>
                <h4 class="mb-0">{{ stats.total }}</h4>
                <p class="mb-0">{{ text_total_notifications }}</p>
              </div>
              <div class="align-self-center">
                <i class="fas fa-bell fa-2x"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-lg-3 col-md-6">
        <div class="card bg-warning text-white">
          <div class="card-body">
            <div class="d-flex justify-content-between">
              <div>
                <h4 class="mb-0">{{ stats.unread }}</h4>
                <p class="mb-0">{{ text_unread_notifications }}</p>
              </div>
              <div class="align-self-center">
                <i class="fas fa-envelope fa-2x"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-lg-3 col-md-6">
        <div class="card bg-danger text-white">
          <div class="card-body">
            <div class="d-flex justify-content-between">
              <div>
                <h4 class="mb-0">{{ stats.high_priority }}</h4>
                <p class="mb-0">{{ text_high_priority }}</p>
              </div>
              <div class="align-self-center">
                <i class="fas fa-exclamation-triangle fa-2x"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-lg-3 col-md-6">
        <div class="card bg-info text-white">
          <div class="card-body">
            <div class="d-flex justify-content-between">
              <div>
                <h4 class="mb-0">{{ stats.today }}</h4>
                <p class="mb-0">{{ text_today_notifications }}</p>
              </div>
              <div class="align-self-center">
                <i class="fas fa-calendar-day fa-2x"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Filters -->
    <div class="card mb-4">
      <div class="card-header">
        <h5 class="mb-0"><i class="fas fa-filter"></i> {{ text_filters }}</h5>
      </div>
      <div class="card-body">
        <form id="filter-form">
          <div class="row">
            <div class="col-md-3">
              <div class="mb-3">
                <label class="form-label">{{ entry_type }}</label>
                <select name="type" class="form-select">
                  <option value="">{{ text_all_types }}</option>
                  {% for type in notification_types %}
                    <option value="{{ type.code }}">{{ type.name }}</option>
                  {% endfor %}
                </select>
              </div>
            </div>
            <div class="col-md-3">
              <div class="mb-3">
                <label class="form-label">{{ entry_status }}</label>
                <select name="status" class="form-select">
                  <option value="">{{ text_all_status }}</option>
                  <option value="unread">{{ text_unread }}</option>
                  <option value="read">{{ text_read }}</option>
                  <option value="archived">{{ text_archived }}</option>
                </select>
              </div>
            </div>
            <div class="col-md-3">
              <div class="mb-3">
                <label class="form-label">{{ entry_priority }}</label>
                <select name="priority" class="form-select">
                  <option value="">{{ text_all_priorities }}</option>
                  <option value="low">{{ text_low_priority }}</option>
                  <option value="normal">{{ text_normal_priority }}</option>
                  <option value="high">{{ text_high_priority }}</option>
                  <option value="urgent">{{ text_urgent_priority }}</option>
                </select>
              </div>
            </div>
            <div class="col-md-3">
              <div class="mb-3">
                <label class="form-label">{{ entry_date_range }}</label>
                <div class="input-group">
                  <input type="date" name="date_from" class="form-control">
                  <span class="input-group-text">{{ text_to }}</span>
                  <input type="date" name="date_to" class="form-control">
                </div>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-12">
              <button type="button" id="btn-filter" class="btn btn-primary">
                <i class="fas fa-search"></i> {{ button_filter }}
              </button>
              <button type="button" id="btn-clear-filter" class="btn btn-secondary">
                <i class="fas fa-times"></i> {{ button_clear }}
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- Notifications List -->
    <div class="card">
      <div class="card-header">
        <h5 class="mb-0"><i class="fas fa-list"></i> {{ text_notifications_list }}</h5>
      </div>
      <div class="card-body">
        <div id="notifications-container">
          <div class="text-center">
            <div class="spinner-border" role="status">
              <span class="visually-hidden">{{ text_loading }}</span>
            </div>
          </div>
        </div>
        <div id="pagination-container" class="mt-3"></div>
      </div>
    </div>
  </div>
</div>

<!-- Compose Notification Modal -->
<div class="modal fade" id="modal-compose" tabindex="-1">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">{{ text_compose_notification }}</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <form id="form-compose">
        <div class="modal-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label class="form-label">{{ entry_title }} <span class="text-danger">*</span></label>
                <input type="text" name="title" class="form-control" required>
              </div>
            </div>
            <div class="col-md-3">
              <div class="mb-3">
                <label class="form-label">{{ entry_type }}</label>
                <select name="type" class="form-select">
                  {% for type in notification_types %}
                    <option value="{{ type.code }}">{{ type.name }}</option>
                  {% endfor %}
                </select>
              </div>
            </div>
            <div class="col-md-3">
              <div class="mb-3">
                <label class="form-label">{{ entry_priority }}</label>
                <select name="priority" class="form-select">
                  <option value="low">{{ text_low_priority }}</option>
                  <option value="normal" selected>{{ text_normal_priority }}</option>
                  <option value="high">{{ text_high_priority }}</option>
                  <option value="urgent">{{ text_urgent_priority }}</option>
                </select>
              </div>
            </div>
          </div>
          <div class="mb-3">
            <label class="form-label">{{ entry_message }} <span class="text-danger">*</span></label>
            <textarea name="message" class="form-control" rows="4" required></textarea>
          </div>
          <div class="mb-3">
            <label class="form-label">{{ entry_recipients }} <span class="text-danger">*</span></label>
            <select name="recipients[]" class="form-select" multiple required>
              <!-- Recipients will be loaded via AJAX -->
            </select>
            <div class="form-text">{{ help_recipients }}</div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <div class="form-check">
                <input type="checkbox" name="send_email" class="form-check-input" id="send_email">
                <label class="form-check-label" for="send_email">{{ text_send_email }}</label>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-check">
                <input type="checkbox" name="send_sms" class="form-check-input" id="send_sms">
                <label class="form-check-label" for="send_sms">{{ text_send_sms }}</label>
              </div>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ button_cancel }}</button>
          <button type="submit" class="btn btn-primary">{{ button_send }}</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Preferences Modal -->
<div class="modal fade" id="modal-preferences" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">{{ text_notification_preferences }}</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <form id="form-preferences">
        <div class="modal-body">
          <div class="mb-3">
            <h6>{{ text_delivery_methods }}</h6>
            <div class="form-check">
              <input type="checkbox" name="email_notifications" class="form-check-input" id="email_notifications"
                     {% if preferences.email_notifications %}checked{% endif %}>
              <label class="form-check-label" for="email_notifications">{{ text_email_notifications }}</label>
            </div>
            <div class="form-check">
              <input type="checkbox" name="sms_notifications" class="form-check-input" id="sms_notifications"
                     {% if preferences.sms_notifications %}checked{% endif %}>
              <label class="form-check-label" for="sms_notifications">{{ text_sms_notifications }}</label>
            </div>
            <div class="form-check">
              <input type="checkbox" name="desktop_notifications" class="form-check-input" id="desktop_notifications"
                     {% if preferences.desktop_notifications %}checked{% endif %}>
              <label class="form-check-label" for="desktop_notifications">{{ text_desktop_notifications }}</label>
            </div>
            <div class="form-check">
              <input type="checkbox" name="sound_notifications" class="form-check-input" id="sound_notifications"
                     {% if preferences.sound_notifications %}checked{% endif %}>
              <label class="form-check-label" for="sound_notifications">{{ text_sound_notifications }}</label>
            </div>
          </div>
          <div class="mb-3">
            <h6>{{ text_notification_types }}</h6>
            {% for type in notification_types %}
              <div class="form-check">
                <input type="checkbox" name="notification_types[]" value="{{ type.code }}" class="form-check-input"
                       id="type_{{ type.code }}"
                       {% if type.code in preferences.notification_types %}checked{% endif %}>
                <label class="form-check-label" for="type_{{ type.code }}">{{ type.name }}</label>
              </div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ button_cancel }}</button>
          <button type="submit" class="btn btn-primary">{{ button_save }}</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
$(document).ready(function() {
    let currentPage = 1;
    const itemsPerPage = 20;

    // Load notifications
    function loadNotifications(page = 1, filters = {}) {
        const data = {
            start: (page - 1) * itemsPerPage,
            limit: itemsPerPage,
            ...filters
        };

        $.ajax({
            url: 'index.php?route=notification/center/getNotifications&user_token={{ user_token }}',
            type: 'GET',
            data: data,
            dataType: 'json',
            beforeSend: function() {
                $('#notifications-container').html('<div class="text-center"><div class="spinner-border" role="status"></div></div>');
            },
            success: function(response) {
                if (response.success) {
                    displayNotifications(response.notifications);
                    displayPagination(response.total, page);
                } else {
                    $('#notifications-container').html('<div class="alert alert-warning">{{ text_no_notifications }}</div>');
                }
            },
            error: function() {
                $('#notifications-container').html('<div class="alert alert-danger">{{ error_loading_notifications }}</div>');
            }
        });
    }

    // Display notifications
    function displayNotifications(notifications) {
        let html = '';

        if (notifications.length === 0) {
            html = '<div class="alert alert-info">{{ text_no_notifications }}</div>';
        } else {
            notifications.forEach(function(notification) {
                const priorityClass = {
                    'low': 'border-success',
                    'normal': 'border-info',
                    'high': 'border-warning',
                    'urgent': 'border-danger'
                };

                const statusClass = notification.status === 'unread' ? 'bg-light' : '';

                html += `
                    <div class="card mb-2 ${priorityClass[notification.priority]} ${statusClass}" data-id="${notification.notification_id}">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="flex-grow-1">
                                    <h6 class="card-title mb-1">
                                        <i class="${notification.icon || 'fas fa-bell'}" style="color: ${notification.color || '#007bff'}"></i>
                                        ${notification.title}
                                        ${notification.status === 'unread' ? '<span class="badge bg-primary ms-2">جديد</span>' : ''}
                                    </h6>
                                    <p class="card-text">${notification.message}</p>
                                    <small class="text-muted">
                                        <i class="fas fa-user"></i> ${notification.firstname} ${notification.lastname}
                                        <i class="fas fa-clock ms-2"></i> ${notification.date_added}
                                        <span class="badge bg-${notification.priority === 'urgent' ? 'danger' : notification.priority === 'high' ? 'warning' : 'secondary'} ms-2">
                                            ${notification.priority}
                                        </span>
                                    </small>
                                </div>
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        ${notification.status === 'unread' ? '<li><a class="dropdown-item mark-read" href="#"><i class="fas fa-check"></i> {{ text_mark_read }}</a></li>' : ''}
                                        <li><a class="dropdown-item archive" href="#"><i class="fas fa-archive"></i> {{ text_archive }}</a></li>
                                        <li><a class="dropdown-item delete" href="#"><i class="fas fa-trash"></i> {{ text_delete }}</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });
        }

        $('#notifications-container').html(html);
    }

    // Display pagination
    function displayPagination(total, currentPage) {
        const totalPages = Math.ceil(total / itemsPerPage);
        let html = '';

        if (totalPages > 1) {
            html = '<nav><ul class="pagination justify-content-center">';

            // Previous button
            html += `<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${currentPage - 1}">{{ text_previous }}</a>
                     </li>`;

            // Page numbers
            for (let i = 1; i <= totalPages; i++) {
                if (i === currentPage || i === 1 || i === totalPages || (i >= currentPage - 2 && i <= currentPage + 2)) {
                    html += `<li class="page-item ${i === currentPage ? 'active' : ''}">
                                <a class="page-link" href="#" data-page="${i}">${i}</a>
                             </li>`;
                } else if (i === currentPage - 3 || i === currentPage + 3) {
                    html += '<li class="page-item disabled"><span class="page-link">...</span></li>';
                }
            }

            // Next button
            html += `<li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${currentPage + 1}">{{ text_next }}</a>
                     </li>`;

            html += '</ul></nav>';
        }

        $('#pagination-container').html(html);
    }

    // Event handlers
    $(document).on('click', '.page-link', function(e) {
        e.preventDefault();
        const page = parseInt($(this).data('page'));
        if (page && page !== currentPage) {
            currentPage = page;
            loadNotifications(page, getFilters());
        }
    });

    $(document).on('click', '.mark-read', function(e) {
        e.preventDefault();
        const notificationId = $(this).closest('.card').data('id');
        markAsRead(notificationId);
    });

    $(document).on('click', '.archive', function(e) {
        e.preventDefault();
        const notificationId = $(this).closest('.card').data('id');
        archiveNotification(notificationId);
    });

    $(document).on('click', '.delete', function(e) {
        e.preventDefault();
        const notificationId = $(this).closest('.card').data('id');
        deleteNotification(notificationId);
    });

    $('#btn-filter').click(function() {
        currentPage = 1;
        loadNotifications(1, getFilters());
    });

    $('#btn-clear-filter').click(function() {
        $('#filter-form')[0].reset();
        currentPage = 1;
        loadNotifications(1);
    });

    $('#btn-mark-all-read').click(function() {
        markAllAsRead();
    });

    // Helper functions
    function getFilters() {
        return {
            type: $('select[name="type"]').val(),
            status: $('select[name="status"]').val(),
            priority: $('select[name="priority"]').val(),
            date_from: $('input[name="date_from"]').val(),
            date_to: $('input[name="date_to"]').val()
        };
    }

    function markAsRead(notificationId) {
        $.ajax({
            url: 'index.php?route=notification/center/markAsRead&user_token={{ user_token }}',
            type: 'POST',
            data: { notification_id: notificationId },
            dataType: 'json',
            success: function(response) {
                if (response.success) {
                    loadNotifications(currentPage, getFilters());
                    updateUnreadCount();
                }
            }
        });
    }

    function markAllAsRead() {
        $.ajax({
            url: 'index.php?route=notification/center/markAllAsRead&user_token={{ user_token }}',
            type: 'POST',
            dataType: 'json',
            success: function(response) {
                if (response.success) {
                    loadNotifications(currentPage, getFilters());
                    updateUnreadCount();
                    location.reload(); // Refresh to update stats
                }
            }
        });
    }

    function archiveNotification(notificationId) {
        $.ajax({
            url: 'index.php?route=notification/center/archive&user_token={{ user_token }}',
            type: 'POST',
            data: { notification_id: notificationId },
            dataType: 'json',
            success: function(response) {
                if (response.success) {
                    loadNotifications(currentPage, getFilters());
                }
            }
        });
    }

    function deleteNotification(notificationId) {
        if (confirm('{{ text_confirm_delete }}')) {
            $.ajax({
                url: 'index.php?route=notification/center/delete&user_token={{ user_token }}',
                type: 'POST',
                data: { notification_id: notificationId },
                dataType: 'json',
                success: function(response) {
                    if (response.success) {
                        loadNotifications(currentPage, getFilters());
                    }
                }
            });
        }
    }

    function updateUnreadCount() {
        $.ajax({
            url: 'index.php?route=notification/center/getUnreadCount&user_token={{ user_token }}',
            type: 'GET',
            dataType: 'json',
            success: function(response) {
                if (response.success) {
                    // Update notification badge in header
                    $('.notification-badge').text(response.count);
                    if (response.count === 0) {
                        $('.notification-badge').hide();
                    }
                }
            }
        });
    }

    // Form submissions
    $('#form-compose').submit(function(e) {
        e.preventDefault();

        $.ajax({
            url: 'index.php?route=notification/center/send&user_token={{ user_token }}',
            type: 'POST',
            data: $(this).serialize(),
            dataType: 'json',
            success: function(response) {
                if (response.success) {
                    $('#modal-compose').modal('hide');
                    $('#form-compose')[0].reset();
                    loadNotifications(currentPage, getFilters());
                    alert(response.success);
                } else {
                    alert(response.error);
                }
            }
        });
    });

    $('#form-preferences').submit(function(e) {
        e.preventDefault();

        $.ajax({
            url: 'index.php?route=notification/center/updatePreferences&user_token={{ user_token }}',
            type: 'POST',
            data: $(this).serialize(),
            dataType: 'json',
            success: function(response) {
                if (response.success) {
                    $('#modal-preferences').modal('hide');
                    alert(response.success);
                } else {
                    alert(response.error);
                }
            }
        });
    });

    // Initial load
    loadNotifications();

    // Auto-refresh every 30 seconds
    setInterval(function() {
        updateUnreadCount();
    }, 30000);
});
</script>

<style>
.card {
    transition: all 0.3s ease;
}

.card:hover {
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.notification-item {
    border-left: 4px solid #007bff;
}

.notification-item.unread {
    background-color: #f8f9fa;
    border-left-color: #28a745;
}

.notification-item.high-priority {
    border-left-color: #ffc107;
}

.notification-item.urgent-priority {
    border-left-color: #dc3545;
}

.badge {
    font-size: 0.75em;
}

.dropdown-toggle::after {
    display: none;
}

.pagination .page-link {
    color: #007bff;
}

.pagination .page-item.active .page-link {
    background-color: #007bff;
    border-color: #007bff;
}

.modal-header {
    background-color: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
}

.form-check-input:checked {
    background-color: #007bff;
    border-color: #007bff;
}

.spinner-border {
    width: 3rem;
    height: 3rem;
}

@media (max-width: 768px) {
    .card-body .d-flex {
        flex-direction: column;
    }

    .dropdown {
        align-self: flex-end;
        margin-top: 10px;
    }
}
</style>

{{ footer }}
